apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'

android {
    compileSdkVersion config.sdk.target
    buildToolsVersion config.buildTools
    defaultConfig {
        minSdkVersion config.sdk.min
        targetSdkVersion config.sdk.target
        testInstrumentationRunner config.testRunner
    }
    defaultConfig {
        consumerProguardFiles 'proguard-rules.pro'
    }
}

dependencies {
    compile project(':bundler-annotations')
    compile deps.supportFragment

    androidTestCompile deps.truth
    androidTestCompile(deps.testRunner) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile(deps.testEspresso) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    testCompile deps.junit
    testCompile deps.truth
    testCompile deps.compileTesting
    testCompile files(getRuntimeJar())
    testCompile files(org.gradle.internal.jvm.Jvm.current().getToolsJar())
    testCompile project(':bundler-compiler')
}

def getRuntimeJar() {
    try {
        final File javaBase = new File(System.getProperty("java.home")).getCanonicalFile();
        File runtimeJar = new File(javaBase, "lib/rt.jar");
        if (runtimeJar.exists()) {
            return runtimeJar;
        }
        runtimeJar = new File(javaBase, "jre/lib/rt.jar");
        return runtimeJar.exists() ? runtimeJar : null;
    } catch (IOException e) {
        throw new RuntimeException(e);
    }
}

publish {
    userOrg = bintray.user
    groupId = bintray.group
    artifactId = bintray.artifact.main
    publishVersion = bintray.version
    desc = bintray.desc
    website = bintray.website
}